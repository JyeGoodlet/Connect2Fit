@using Microsoft.AspNet.Identity
@model int
@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<span>Room @Model</span>

<script src='~/Scripts/angular.js'></script>

<div ng-app="Room" ng-controller="Chat" class="ng-cloak">
    <h2>Client Classes</h2>
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Person</th>
                <th>Message</th>

            </tr>
        </thead>
        <tbody>
            <tr class="animation" ng-repeat="message in messages">
                <td>{{message.person}}</td>
                <td>{{message.text}}</td>
               
            </tr>
        </tbody>

    </table>
    <form>
    <input  type="text" ng-model="newMessage" />
    <input type="submit" ng-click="addMessage()" value="Save" />
    </form>


</div>


@section scripts {

    <script src="~/Scripts/jquery.signalR-2.2.0.js"></script>
    <script src="~/signalr/hubs"></script>


    <script>


        //signalr connection
        chat = $.connection.roomHub;
        $.connection.hub.start(
            function () {
                chat.server.joinRoom(@Model);
            }).done(function () {
                //closing stuff here
                //chat.server.leaveRoom(@Model);
        });



        var app = angular.module('Room', []);
        app.controller('Chat', function ($scope, $http) {
            var groupId = @Model;
            $scope.userId = "@User.Identity.GetUserId()";



            //hold a list of all the classes
            $scope.messages = [];

            $scope.addMessage = function () {
                //add message
                var newMessage = { person: $scope.userId, text: $scope.newMessage }
                $scope.messages.push(newMessage);
                chat.server.message(groupId, newMessage);
                $scope.newMessage = "";
            }

            //onload
            var init = function() {
                //DO STUFF HERE

            }();

            //signalr functions
            chat.client.message = function (message) {
             
                console.log(message);
                $scope.messages.push(message);
                $scope.$apply();

            }

            chat.client.recievePoint = function(point) {
                console.log(point);

            }


        });

        function testSendingPoint() {
            point = {clientId: 1, pointId: 2, x: 3, y: 4, z: 5 }
            chat.server.sendpoint(@Model, point);
            return "sent";

        }


    </script>

}