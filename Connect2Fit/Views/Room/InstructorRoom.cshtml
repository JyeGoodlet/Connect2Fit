@using Microsoft.AspNet.Identity
@using Connect2Fit.Models;
@model  ScheduleItem
@{
    ViewBag.Title = "InstructorRoom";
}

<h2>Instructor Room</h2>
<div ng-app="Room" class="ng-cloak"  >
<div ng-controller="WebRTC"  class="row" id="ClientAvatars">
    <div class="col-md-4" ng-repeat="client in clients">
        <div>Avatar Here</div>
        <span>{{client.name}}</span>
        <span ng-if="(client.name | userOnline:getConnectedClients()) == true" class="label label-success">Online</span>
        <span ng-if="(client.name | userOnline:getConnectedClients()) == false" class="label label-danger">Offline</span>
    </div>

</div>
<div id="status">Connecting</div>
<div class="row">
    
    <div class="col-md-3" id="videos">
        <video autoplay="autoplay" id="selfVideo" muted="muted" volume="0"></video>

    </div>
    <!--
    <div ng-controller="WebRTC"  class="col-md-7 .col-md-offset-1">
        <h4>Clients</h4>
        <table class="table table-striped">
            <tr ng-repeat="client in clients">
                <td>{{client.name}}</td>
                <td>
                    <span ng-if="(client.name | userOnline:getConnectedClients()) == true" class="label label-success">Online</span>
                    <span ng-if="(client.name | userOnline:getConnectedClients()) == false" class="label label-danger">Offline</span>
                </td>
            </tr>
        </table>
    </div>
        -->
</div>
<div ng-controller="Chat" >
    <h2>Client Classes</h2>
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Person</th>
                <th>Message</th>

            </tr>
        </thead>
        <tbody>
            <tr class="animation" ng-repeat="message in messages">
                <td>{{message.person}}</td>
                <td>{{message.text}}</td>

            </tr>
        </tbody>

    </table>
    <form>
        <input type="text" ng-model="newMessage" />
        <input type="submit" ng-click="addMessage()" value="Save" />
    </form>


</div>
</div>



@section scripts {
<script src='~/Scripts/angular.js'></script>
<script src="~/Scripts/jquery.signalR-2.2.0.js"></script>
<script src="~/signalr/hubs"></script>
<script src="~/Content/Research/assets/armWavingOO.js"></script>

<link rel="stylesheet" type="text/css" href="http://ec2-52-64-224-50.ap-southeast-2.compute.amazonaws.com:8080/easyrtc/easyrtc.css" />

<!-- Assumes global locations for socket.io.js and easyrtc.js -->
<script src="http://ec2-52-64-224-50.ap-southeast-2.compute.amazonaws.com:8080/socket.io/socket.io.js"></script>
<script type="text/javascript" src="http://ec2-52-64-224-50.ap-southeast-2.compute.amazonaws.com:8080/easyrtc/easyrtc.js"></script>
<!-- <script type="text/javascript" src="http://ec2-52-64-224-50.ap-southeast-2.compute.amazonaws.com:8080/demos/js/demo_audio_video_simple.js"></script> -->
<script type="text/javascript">

    //signalr connection
    chat = $.connection.roomHub;
    $.connection.hub.start(
        function () {
            chat.server.joinRoom(@Model.id);
        }).done(function () {
            //closing stuff here
            //chat.server.leaveRoom(@Model.id);
        });



    var app = angular.module('Room', []);
    app.controller('Chat', function ($scope, $http) {
        var groupId = @Model.id;
        $scope.userId = "@User.Identity.Name";


         
        //hold a list of all the classes
        $scope.messages = [];

        $scope.addMessage = function () {
            //add message
            var newMessage = { person: $scope.userId, text: $scope.newMessage }
            $scope.messages.push(newMessage);
            chat.server.message(groupId, newMessage);
            $scope.newMessage = "";
        }

        //onload
        var init = function() {
            //DO STUFF HERE

        }();

        //signalr functions
        chat.client.message = function (message) {

            //console.log(message);
            $scope.messages.push(message);
            $scope.$apply();

        }

        chat.client.recievePoint = function(point) {
            //console.log(point);

        }


    });

    function testSendingPoint() {
        point = {clientId: 1, pointId: 2, x: 3, y: 4, z: 5 }
        chat.server.sendpoint(@Model.id, point);
        return "sent";

    }




    app.controller('WebRTC', function ($scope, $http) {
        $scope.clients;
        $scope.connectedClients = [];
        
        $scope.getConnectedClients = function() {
            return $scope.connectedClients;
        }

        $scope.getUsers = function() {
            $http.get('/Room/GetAttendies/' + @Model.id).then(function(response) {
                //console.log(response.data)
                $scope.clients = response.data;
            });
        }

        $scope.online = function(id) {
            id = id;
            items = $scope.connectedClients;

            for (var x = 0; x < items.length;x++) {

                //console.log(item);
                if (items[x] == id) {
                    return "Connected";
                } 
            }
            return "Not Connected"
        }

        var init = function() {
            $scope.clients = [{name: "test", online: false}]
            $scope.getUsers();
        }();



        
        $(document).ready(function() {
            connect();

        })

        var selfEasyrtcid = "";

        function connect() {
            easyrtc.setSocketUrl("http://ec2-52-64-224-50.ap-southeast-2.compute.amazonaws.com:8080");
            easyrtc.setVideoDims(320, 240);
            easyrtc.setUsername("@User.Identity.Name");
            easyrtc.joinRoom("@Model.id", null, null, null)
            easyrtc.setRoomOccupantListener(convertListToButtons);

            easyrtc.easyApp("easyrtc.audioVideoSimple", "selfVideo", [], loginSuccess, loginFailure);
        }


        function clearConnectList() {
            $scope.connectedClients = [];
        }


        function convertListToButtons(roomName, data, isPrimary) {
            clearConnectList();
            var otherClientDiv = document.getElementById('otherClients');
            //console.log(data);
            for (var easyrtcid in data) {

                //add each id to angularjs array
                $scope.connectedClients.push(easyrtc.idToName(easyrtcid));
                //console.log($scope.connectedClients);
                //console.log(easyrtc.idToName(easyrtcid) + " connected")
               
                performCall(easyrtcid);
            }
            $scope.$apply();
        }


        function performCall(otherEasyrtcid) {
            easyrtc.hangupAll();

            var successCB = function () { };
            var failureCB = function () { };
            easyrtc.call(otherEasyrtcid, successCB, failureCB);
        }


        function loginSuccess(easyrtcid) {
            selfEasyrtcid = easyrtcid;
            document.getElementById("status").innerHTML = "Connected";
        }


        function loginFailure(errorCode, message) {
            easyrtc.showError(errorCode, message);
        }


    });

    angular.module('Room').filter('userOnline', function() {
        return function(user, onlineUsers) {
            //console.log(user);
            //console.log("here");
            //console.log(onlineUsers);
           

            for (var i in onlineUsers) {

                if (onlineUsers[i] == user) {
                        
                        return true;
                    }
                }
                return false;

           
        };
    });

       
    

</script>

    }