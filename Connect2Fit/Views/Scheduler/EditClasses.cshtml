
@model ScheduleItem
@using Connect2Fit.Models;
@{
    ViewBag.Title = "Edit Class";
}

<h2>@ViewBag.Title.</h2>

@if (User.IsInRole("Administrator"))
{
    using (Html.BeginForm())
    {
        <div class="form-horizontal">
            <div class="form-group">
                @Html.LabelFor(model => model.id, htmlAttributes: new { style = "display: none;" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.id, new { htmlAttributes = new { style = "display: none;" } })
                    @Html.ValidationMessageFor(model => model.id, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ClassDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.ClassDateTime, new { @class = "form-control datepicker" })
                    @Html.ValidationMessageFor(model => model.ClassDateTime, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.instructor.Name, new { @class = "col-md-2 control-label" })
                <div class="col-md-3">
                    @Html.DropDownListFor(model => model.instructor.Id, new SelectList(ViewBag.Instructors, "Id", "Name"), "--Select Instructor--", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.instructor.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ClassName, new { @class = "col-md-2 control-label" })
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.ClassName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ClassName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.maxAttendies, new { @class = "col-md-2 control-label" })
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.maxAttendies, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.maxAttendies, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.sessionTime, new { @class = "col-md-2 control-label" })
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.sessionTime, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.sessionTime, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.sessionEnded, new { @class = "col-md-2 control-label" })
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.sessionEnded, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.sessionEnded, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Clients, htmlAttributes: new { style = "display: none;" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.Clients, new { htmlAttributes = new { style = "display: none;" } })
                    @Html.ValidationMessageFor(model => model.Clients, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" class="btn btn-default" value="Edit Class" />
                </div>
            </div>
        </div>
    }
}
else
{
    <h3>You are not authorised to view this page. Please log in. </h3>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

<script type="text/javascript">

    $(document).ready(function () {
        //disabling client side date check as it fails in chrome.
        //TODO: Fix later
        jQuery.validator.methods["date"] = function (value, element) { return true; }

        $('.datepicker').datetimepicker(
            {
                format: 'DD/MM/YYYY hh:mm A',
                sideBySide: true
            });
    });
</script>
}
