
@model ScheduleItem
@using Connect2Fit.Models;
@{
    ViewBag.Title = "Delete Class";
}


@if (User.IsInRole("Administrator"))
{

    <h2>@ViewBag.Title.</h2>
    <h3> This Class will be deleted. Hit delete to continue!</h3>
    using (Html.BeginForm())
    {
        <div class="form-horizontal">
            <div class="form-group">
                @Html.LabelFor(model => model.id, htmlAttributes: new { style = "display: none;" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.id, new { htmlAttributes = new { style = "display: none;" } })
                    
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ClassDateTime, htmlAttributes: new { @class = "col-md-offset-1 col-md-1"})
                <span class="col-md-1">@Html.DisplayFor(model => model.ClassDateTime)</span>
                @Html.EditorFor(model => model.ClassDateTime, new { htmlAttributes = new { style = "display: none;" } })
                    
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.instructor.Name, htmlAttributes: new { @class = "col-md-offset-1 col-md-1" })
                <span class="col-md-1">@Html.DisplayFor(model => model.instructor.Name)</span>
                @Html.EditorFor(model => model.instructor.Name, new { htmlAttributes = new { style = "display: none;" } })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ClassName, htmlAttributes: new { @class = "col-md-offset-1 col-md-1" })
                <span class="col-md-1">@Html.DisplayFor(model => model.ClassName)</span>
                @Html.EditorFor(model => model.ClassName, new { htmlAttributes = new { style = "display: none;" } })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.maxAttendies, htmlAttributes: new { @class = "col-md-offset-1 col-md-1" })
                <span class="col-md-1">@Html.DisplayFor(model => model.maxAttendies)</span>
                @Html.EditorFor(model => model.maxAttendies, new { htmlAttributes = new { style = "display: none;" } })

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.sessionTime, htmlAttributes: new { @class = "col-md-offset-1 col-md-1" })
                <span class="col-md-1">@Html.DisplayFor(model => model.sessionTime)</span>
                @Html.EditorFor(model => model.sessionTime, new { htmlAttributes = new { style = "display: none;" } })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.sessionEnded, htmlAttributes: new { @class = "col-md-offset-1 col-md-1" })
                <span class="col-md-1">@Html.DisplayFor(model => model.sessionEnded)</span>
                @Html.EditorFor(model => model.sessionEnded, new { htmlAttributes = new { style = "display: none;" } })
            </div>






            <div class="form-group">
                <div class="col-md-offset-1">
                    <input type="submit" class="btn btn-default" value="Delete" />
                </div>
            </div>
        </div>
    }
}
else
{
    <h3>You are not authorised to view this page. Please log in. </h3>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
